{"version":3,"sources":["util/firebase.js","components/ChatListItem.jsx","components/IncomingMessage.jsx","components/OutgoingMessage.jsx","util/websocket.js","components/ChatPanel.jsx","components/NewChat.jsx","pages/ChatPage.jsx","pages/LoginPage.jsx","App.js","registerServiceWorker.js","index.js"],"names":["fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ChatListItem","_this","this","react_default","a","createElement","index_es","button","onClick","props","onChatItemClicked","chat_id","src","primary","name","Component","IncomingMessage","date","hour","getHours","amOrPM","dateString","concat","getMinutes","getMonth","getDate","className","profilePicture","alt","message","OutgoingMessage","socket","chat_callback","ChatPanel","state","messages","nextProps","_this2","startTime","setState","auth","currentUser","getIdToken","then","token","fetch","window","location","host","headers","authorization","res","json","messagesEnd","scrollIntoView","behavior","_this3","push","console","log","messagesObj","i","length","Owner","uid","components_OutgoingMessage","Message","Date","Time_Sent","replace","components_IncomingMessage","profile_picture","_this4","renderMessages","style","float","clear","ref","el","inputComponent","_ref","inputRef","Object","objectWithoutProperties","assign","components","Control","TextField_default","fullWidth","InputProps","inputProps","objectSpread","selectProps","classes","input","innerRef","children","innerProps","textFieldProps","Menu","Paper_default","square","paper","MultiValue","Chip_default","tabIndex","label","classNames","chip","defineProperty","chipFocused","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","Typography_default","color","noOptionsMessage","Option","MenuItem_default","buttonRef","selected","component","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","NewChat","map","suggestion","value","names","suggestions","chat_name","handleChange","users","id","ID","event","target","_this$props","theme","selectStyles","base","palette","text","& input","font","marginTop","onChange","handleChatNameChange","bind","type","marginBottom","react_select_esm","styles","InputLabelProps","shrink","options","multi","isMulti","Button_default","variant","onCreateChatClicked","JSON","stringify","method","body","members","Content-Type","withStyles","root","flexGrow","height","display","padding","flexWrap","flex","alignItems","margin","spacing","unit","backgroundColor","emphasize","grey","fontSize","position","left","zIndex","right","divider","withTheme","drawerWidth","ClippedDrawer","shouldShowNewChat","chats","current_chat_id","undefined","gotChats","_handleKeyPress","e","key","sendChatTest","user","current_chat","Chat_ID","keys","history","AppBar_default","appBar","Toolbar_default","noWrap","textTransform","signOut","email","Drawer_default","drawerPaper","List_default","ChatBubbleOutline_default","Divider_default","renderChats","renderNewChat","renderChat","components_ChatListItem","containerStr","content","components_NewChat","_this$state","inputText","emit","components_ChatPanel","onKeyPress","aria-hidden","overflow","drawer","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","background","default","minWidth","toolbar","mixins","stylesCard","cardStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","divStyle","justifyContent","flexDirection","buttonStyle","errorStyle","LoginPage","password","error","signUpScreen","renderContent","errorMsg","autoComplete","emailChanged","passwordChanged","size","signUp","loginScreen","signIn","signInWithEmailAndPassword","catch","errorMessage","_this$state2","createUserWithEmailAndPassword","App","BrowserRouter","Route","exact","path","render","ChatPage","pages_LoginPage","onAuthStateChanged","require","query","on","msg","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6ffa9269.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nvar config = {\n    apiKey: 'AIzaSyB7780W1NWElLt08G9K8AxakK29ocEVwNs',\n    authDomain: 'independent-studies-2018-2019.firebaseapp.com',\n    databaseURL: 'https://independent-studies-2018-2019.firebaseio.com',\n    projectId: 'independent-studies-2018-2019',\n    storageBucket: 'independent-studies-2018-2019.appspot.com',\n    messagingSenderId: '523918752724'\n};\nvar fire = firebase.initializeApp(config);\nexport default fire;\n","import React, { Component } from 'react';\nimport { ListItem, Avatar, ListItemText } from '@material-ui/core';\n\nclass ChatListItem extends Component {\n    render() {\n        return (\n            <ListItem\n                button\n                onClick={() => this.props.onChatItemClicked(this.props.chat_id)}\n            >\n                <Avatar src=\"/resources/BobSaget.jpg\" />\n                <ListItemText primary={this.props.name} />\n            </ListItem>\n        );\n    }\n}\n\nexport default ChatListItem;\n","import React, { Component } from 'react';\nimport { Avatar } from '@material-ui/core';\n\nclass IncomingMessage extends Component {\n    render() {\n        const date = this.props.date;\n\n        var hour = date.getHours();\n        var amOrPM = 'AM';\n\n        var months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ];\n\n        if (hour > 12) {\n            hour = hour % 12;\n            amOrPM = 'PM';\n        }\n\n        const dateString = ` ${date.getHours()}:${date.getMinutes()} ${amOrPM} | ${\n            months[date.getMonth()]\n        } ${date.getDate()}`;\n\n        return (\n            <div className=\"incoming_msg\">\n                <div className=\"incoming_msg_name\">\n                    <p>{this.props.name}</p>\n                </div>\n                <div className=\"incoming_msg_img\">\n                    {' '}\n                    <Avatar src={this.props.profilePicture} alt=\"sunil\" />{' '}\n                </div>\n                <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                        <p>{this.props.message}</p>\n                        <span className=\"time_date\">{dateString}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default IncomingMessage;\n","import React, { Component } from 'react';\n\nclass OutgoingMessage extends Component {\n    render() {\n        const date = this.props.date;\n\n        var hour = date.getHours();\n        var amOrPM = 'AM';\n\n        var months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ];\n\n        if (hour > 12) {\n            hour = hour % 12;\n            amOrPM = 'PM';\n        }\n\n        const dateString = ` ${date.getHours()}:${date.getMinutes()} ${amOrPM} | ${\n            months[date.getMonth()]\n        } ${date.getDate()}`;\n\n        return (\n            <div className=\"outgoing_msg\">\n                <div className=\"sent_msg\">\n                    <p>{this.props.message}</p>\n                    <span className=\"time_date\">{dateString}</span>{' '}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OutgoingMessage;\n","import firebase from '../util/firebase';\nlet socket = {};\n\nlet chat_callback = function() {};\n\nexport const socketConnect = () => {\n    firebase\n        .auth()\n        .currentUser.getIdToken(true)\n        .then(token => {\n            socket = require('socket.io-client')('http://localhost:3000', {\n                query: { token }\n            });\n            socket.on('connect', function() {\n                console.log('connected!');\n            });\n            socket.on('disconnect', function() {});\n            socket.on('chat', function(msg) {\n                console.log('CHAT!');\n                console.log(msg);\n                chat_callback(msg);\n            });\n        });\n};\n\nexport const setupChatCallback = callback => {\n    chat_callback = callback;\n};\n\nexport const sendChat = (chat_id, message) => {\n    socket.emit('chat', { chat_id, message });\n};\n","import React, { Component } from 'react';\nimport IncomingMessage from './IncomingMessage';\nimport OutgoingMessage from './OutgoingMessage';\nimport firebase from '../util/firebase';\nimport { setupChatCallback } from '../util/websocket';\n\nclass ChatPanel extends Component {\n    state = { messages: [] };\n\n    componentWillReceiveProps(nextProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if (nextProps.startTime !== this.state.startTime) {\n            this.setState({ startTime: nextProps.startTime });\n        }\n\n        firebase\n            .auth()\n            .currentUser.getIdToken(true)\n            .then(token => {\n                fetch(\n                    `https://${window.location.host}/api/chats/messages/${\n                        nextProps.chat_id\n                    }`,\n                    {\n                        headers: {\n                            authorization: token\n                        }\n                    }\n                )\n                    .then(res => {\n                        return res.json();\n                    })\n                    .then(json => {\n                        this.setState({ messages: json });\n                        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n                    });\n            });\n    }\n\n    componentDidMount() {\n        setupChatCallback(message => {\n            const { messages } = this.state;\n            messages.push(message);\n            this.setState({ messages });\n            this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n        });\n    }\n\n    renderMessages() {\n        const { messages } = this.state;\n        console.log(messages);\n        let messagesObj = [];\n        for (let i = 0; i < messages.length; i++) {\n            console.log(messages[i]);\n            if (messages[i].Owner === firebase.auth().currentUser.uid) {\n                messagesObj.push(\n                    <OutgoingMessage\n                        message={messages[i].Message}\n                        date={new Date(messages[i].Time_Sent.replace(' ', 'T'))}\n                    />\n                );\n            } else {\n                messagesObj.push(\n                    <IncomingMessage\n                        message={messages[i].Message}\n                        date={new Date(messages[i].Time_Sent.replace(' ', 'T'))}\n                        name={messages[i].name}\n                        profilePicture={messages[i].profile_picture}\n                    />\n                );\n            }\n        }\n\n        return messagesObj;\n    }\n\n    render() {\n        return (\n            <div className=\"mesgs\">\n                <div>\n                    {/*                    \n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"How are you?\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Good, Bob Saget, I'm having a great day\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"I'm glad!\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"How is your day?\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"My day is great, just working on some programming!\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Awesome! What are you programming?\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"I'm programming a cool chat application!!\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Does it use Comics Sans?\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"No, it uses Times New Roman\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Then my chat application is better, it is Comic Sans or nothing\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"Ah you're right, I am going to change it to Comic Sans right away!\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Good, I am looking forward to trying your app!\"\n                        date={new Date()}\n                    />\n                    <IncomingMessage\n                        profilePicture=\"/resources/BobSaget.jpg\"\n                        message=\"Thanks!! I think your Comic Sans Chat app is great!\"\n                        name=\"Bob Saget\"\n                        date={new Date()}\n                    />\n                    <OutgoingMessage\n                        message=\"Thanks, I appreciate it!\"\n                        date={new Date()}\n                    /> */}\n                    {this.renderMessages()}\n                    <div\n                        style={{ float: 'left', clear: 'both' }}\n                        ref={el => {\n                            this.messagesEnd = el;\n                        }}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChatPanel;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport Button from '@material-ui/core/Button';\nimport { Input } from '@material-ui/core';\nimport firebase from '../util/firebase';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        height: 250\n    },\n    input: {\n        display: 'flex',\n        padding: 0\n    },\n    valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center'\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n    },\n    chipFocused: {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light'\n                ? theme.palette.grey[300]\n                : theme.palette.grey[700],\n            0.08\n        )\n    },\n    noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n    },\n    singleValue: {\n        fontSize: 16\n    },\n    placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0\n    },\n    divider: {\n        height: theme.spacing.unit * 2\n    }\n});\n\nfunction NoOptionsMessage(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.noOptionsMessage}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: props.selectProps.classes.input,\n                    inputRef: props.innerRef,\n                    children: props.children,\n                    ...props.innerProps\n                }\n            }}\n            {...props.selectProps.textFieldProps}\n        />\n    );\n}\n\nfunction Option(props) {\n    return (\n        <MenuItem\n            buttonRef={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.placeholder}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction SingleValue(props) {\n    return (\n        <Typography\n            className={props.selectProps.classes.singleValue}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props) {\n    return (\n        <div className={props.selectProps.classes.valueContainer}>\n            {props.children}\n        </div>\n    );\n}\n\nfunction MultiValue(props) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={classNames(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props) {\n    return (\n        <Paper\n            square\n            className={props.selectProps.classes.paper}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Paper>\n    );\n}\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer\n};\n\nconst suggestions = [\n    { label: 'Bob Saget' },\n    { label: 'Bob Saget 2.0' },\n    { label: 'Devin Hux' },\n    { label: 'Brian Wieder' },\n    { label: 'JT Mast' },\n    { label: 'Nick Williams' },\n    { label: 'Ben Setaro' },\n    { label: 'William Strom' },\n    { label: 'Haley Nordgaard' },\n    { label: 'Raygan Harrington' },\n    { label: 'Mr.Deleon' },\n    { label: 'Jackson Burkey' },\n    { label: 'Sam Hurlock' },\n    { label: 'Josh Hubbard' },\n    { label: 'John Edwards' },\n    { label: 'Alissa Barber' },\n    { label: 'Casey Evans' },\n    { label: 'Lucas Franke' },\n    { label: 'Joseph Frank' },\n    { label: 'Tanner Brooks' }\n].map(suggestion => ({\n    value: suggestion.label,\n    label: suggestion.label\n}));\n\nclass NewChat extends Component {\n    state = {\n        names: null,\n        suggestions: [],\n        chat_name: ''\n    };\n    handleChange = name => value => {\n        console.log(name);\n        console.log(value);\n        this.setState({\n            names: value\n        });\n    };\n\n    componentDidMount() {\n        fetch(`https://${window.location.host}/api/users`)\n            .then(res => {\n                return res.json();\n            })\n            .then(json => {\n                let users = [];\n                for (let i = 0; i < json.length; i++) {\n                    users.push({ label: json[i].name, id: json[i].ID });\n                }\n                this.setState({\n                    suggestions: users.map(suggestion => ({\n                        value: suggestion.label,\n                        label: suggestion.label,\n                        id: suggestion.id\n                    }))\n                });\n            });\n    }\n\n    handleChatNameChange(event) {\n        this.setState({ chat_name: event.target.value });\n    }\n\n    render() {\n        const { classes, theme } = this.props;\n\n        const selectStyles = {\n            input: base => ({\n                ...base,\n                color: theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit'\n                }\n            })\n        };\n        return (\n            <div style={{ marginTop: 60 }}>\n                <Input\n                    onChange={this.handleChatNameChange.bind(this)}\n                    type=\"text\"\n                    value={this.state.chat_name}\n                    placeholder=\"Chat Name\"\n                    style={{ marginBottom: 20 }}\n                    fullWidth\n                />\n\n                <Select\n                    classes={classes}\n                    styles={selectStyles}\n                    textFieldProps={{\n                        label: 'Chat members',\n                        InputLabelProps: {\n                            shrink: true\n                        }\n                    }}\n                    options={this.state.suggestions}\n                    components={components}\n                    value={this.state.multi}\n                    onChange={this.handleChange('multi')}\n                    placeholder=\"Select one or more people\"\n                    isMulti\n                />\n                <Button\n                    variant=\"outlined\"\n                    style={{ marginTop: 10 }}\n                    onClick={this.onCreateChatClicked.bind(this)}\n                >\n                    Create Chat\n                </Button>\n            </div>\n        );\n    }\n\n    onCreateChatClicked() {\n        console.log(JSON.stringify(this.state.names));\n        firebase\n            .auth()\n            .currentUser.getIdToken(true)\n            .then(token => {\n                fetch(`https://${window.location.host}/api/chats`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        chat_name: this.state.chat_name,\n                        members: this.state.names\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        authorization: token\n                    }\n                });\n            });\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewChat);\n","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ChatIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, ListItem, ListItemText, Avatar } from '@material-ui/core';\n\nimport ChatListItem from '../components/ChatListItem';\nimport ChatPanel from '../components/ChatPanel';\nimport NewChat from '../components/NewChat';\nimport firebase from '../util/firebase';\nimport { sendChat, setupChatCallback } from '../util/websocket';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        zIndex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        height: '100vh',\n        flex: 1\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing.unit * 3,\n        minWidth: 0 // So the Typography noWrap works\n    },\n    toolbar: theme.mixins.toolbar\n});\n\nconst drawerWidth = 240;\n\nclass ClippedDrawer extends Component {\n    state = {\n        shouldShowNewChat: false,\n        chats: [],\n        current_chat_id: undefined,\n        gotChats: false\n    };\n\n    componentDidMount() {}\n\n    render() {\n        const { classes, user } = this.props;\n        const { shouldShowNewChat } = this.state;\n\n        if (firebase.auth().currentUser && !this.state.gotChats) {\n            this.setState({ gotChats: true });\n            firebase\n                .auth()\n                .currentUser.getIdToken(true)\n                .then(token => {\n                    fetch(`https://${window.location.host}/api/chats`, {\n                        headers: {\n                            'Content-Type': 'application/json',\n                            authorization: token\n                        }\n                    })\n                        .then(res => {\n                            return res.json();\n                        })\n                        .then(json => {\n                            let current_chat = undefined;\n                            if (json.length > 0) {\n                                current_chat = json[0].Chat_ID;\n                            }\n                            this.setState({\n                                chats: json,\n                                current_chat_id: current_chat\n                            });\n                        });\n                });\n        }\n\n        if (Object.keys(user).length === 0) {\n            this.props.history.push('/Login');\n        }\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"absolute\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography\n                            variant=\"title\"\n                            color=\"inherit\"\n                            noWrap\n                            style={{ flex: 1 }}\n                        >\n                            Comic Sans Chat\n                        </Typography>\n\n                        <Button\n                            label=\"Default\"\n                            style={{ textTransform: 'none', color: 'white' }}\n                            onClick={this.signOut.bind(this)}\n                        >\n                            {user.email || ''}\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                >\n                    <List style={{ marginTop: 60 }}>\n                        <ListItem\n                            button\n                            onClick={() =>\n                                this.setState({ shouldShowNewChat: true })\n                            }\n                        >\n                            <Avatar>\n                                <ChatIcon />\n                            </Avatar>\n                            <ListItemText primary={`Create new Chat`} />\n                        </ListItem>\n                        <Divider />\n                        {this.renderChats()}\n                    </List>\n                </Drawer>\n                {shouldShowNewChat ? this.renderNewChat() : this.renderChat()}\n            </div>\n        );\n    }\n\n    renderChats() {\n        let chats = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            chats.push(\n                <div key={this.state.chats[i]['Chat_ID']}>\n                    <ChatListItem\n                        chat_id={this.state.chats[i]['Chat_ID']}\n                        onChatItemClicked={chat_id =>\n                            this.onChatItemClicked(chat_id)\n                        }\n                        name={this.state.chats[i]['chat_name']}\n                    />\n                    <Divider />\n                </div>\n            );\n        }\n        console.log(chats);\n        return chats;\n    }\n\n    onChatItemClicked(chat_id) {\n        this.setState({ shouldShowNewChat: false, current_chat_id: chat_id });\n    }\n\n    signOut() {\n        firebase.auth().signOut();\n    }\n\n    navigateToLogin() {\n        this.props.history.push('/Login');\n    }\n\n    renderNewChat() {\n        const { classes } = this.props;\n\n        const containerStr = `${classes.content} main-content`;\n        return (\n            <main className={containerStr}>\n                <NewChat />\n            </main>\n        );\n    }\n\n    sendChatTest() {\n        const { inputText, current_chat_id } = this.state;\n\n        if (inputText) {\n            sendChat(current_chat_id, inputText);\n            this.setState({ inputText: '' });\n        }\n    }\n\n    _handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            this.sendChatTest();\n        }\n    };\n\n    renderChat() {\n        const { classes } = this.props;\n\n        const containerStr = `${classes.content} main-content`;\n        return (\n            <main className={containerStr}>\n                <div />\n                <ChatPanel chat_id={this.state.current_chat_id} />\n                <div className=\"type_msg\">\n                    <div className=\"input_msg_write\">\n                        <input\n                            type=\"text\"\n                            className=\"write_msg\"\n                            placeholder=\"Type a message\"\n                            onChange={text => {\n                                this.setState({ inputText: text.target.value });\n                            }}\n                            value={this.state.inputText}\n                            onKeyPress={this._handleKeyPress.bind(this)}\n                        />\n                        <button\n                            className=\"msg_send_btn\"\n                            type=\"button\"\n                            onClick={() => this.sendChatTest()}\n                        >\n                            <i\n                                className=\"far fa-paper-plane\"\n                                aria-hidden=\"true\"\n                            />\n                        </button>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nClippedDrawer.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClippedDrawer);\n","import React, { Component } from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles,\n    Card,\n    Button,\n    TextField\n} from '@material-ui/core';\n\nimport firebase from '../util/firebase';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        zIndex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        height: '100vh',\n        flex: 1\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing.unit * 3,\n        minWidth: 0 // So the Typography noWrap works\n    },\n    toolbar: theme.mixins.toolbar\n});\n\nconst drawerWidth = 240;\n\nconst stylesCard = {\n    cardStyle: {\n        margin: 10,\n        paddingLeft: 10,\n        paddingRight: 10,\n        width: 500,\n        paddingTop: 10,\n        paddingBottom: 10\n    },\n    divStyle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    buttonStyle: {\n        marginTop: 10\n    },\n    errorStyle: {\n        color: 'red',\n        marginBottom: 10\n    }\n};\n\nclass LoginPage extends Component {\n    state = {\n        email: '',\n        password: '',\n        error: '',\n        signUpScreen: false\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        if (Object.keys(this.props.user).length > 0) {\n            this.props.history.push('/');\n        }\n\n        const containerStr = `${classes.content} main-content`;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"absolute\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography\n                            variant=\"title\"\n                            color=\"inherit\"\n                            noWrap\n                            style={{ flex: 1 }}\n                        >\n                            Comic Sans Chat\n                        </Typography>\n                        <Button color=\"inherit\">Login</Button>\n                    </Toolbar>\n                </AppBar>\n\n                <main className={containerStr}>\n                    <div className={classes.toolbar} />\n                    <div style={stylesCard.divStyle}>\n                        {this.renderContent()}\n                    </div>\n                </main>\n            </div>\n        );\n    }\n\n    renderContent() {\n        var errorMsg =\n            this.state.error !== '' && this.state.error !== undefined ? (\n                <p style={stylesCard.errorStyle}>{this.state.error}</p>\n            ) : null;\n        if (!this.state.signUpScreen) {\n            return (\n                <Card style={stylesCard.cardStyle}>\n                    <Typography variant=\"headline\" component=\"h3\">\n                        Please Sign In\n                    </Typography>\n                    <TextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        value={this.state.email}\n                        error={this.state.error !== ''}\n                        onChange={event =>\n                            this.emailChanged(event.target.value)\n                        }\n                    />\n                    <TextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        autoComplete=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        value={this.state.password}\n                        error={this.state.error !== ''}\n                        onChange={event =>\n                            this.passwordChanged(event.target.value)\n                        }\n                    />\n                    {errorMsg}\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"primary\"\n                            onClick={this.signIn.bind(this)}\n                            style={{\n                                ...stylesCard.buttonStyle,\n                                flex: 1,\n                                float: 'right'\n                            }}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"primary\"\n                            onClick={this.signUpScreen.bind(this)}\n                            style={{ ...stylesCard.buttonStyle, float: 'left' }}\n                        >\n                            Sign Up\n                        </Button>\n                    </div>\n                </Card>\n            );\n        } else {\n            return (\n                <Card style={stylesCard.cardStyle}>\n                    <Typography variant=\"headline\" component=\"h3\">\n                        Please Sign Up\n                    </Typography>\n                    <TextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        value={this.state.email}\n                        error={this.state.error !== ''}\n                        onChange={event =>\n                            this.emailChanged(event.target.value)\n                        }\n                    />\n                    <TextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        autoComplete=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        value={this.state.password}\n                        error={this.state.error !== ''}\n                        onChange={event =>\n                            this.passwordChanged(event.target.value)\n                        }\n                    />\n                    {errorMsg}\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"primary\"\n                            onClick={this.signUp.bind(this)}\n                            style={{\n                                ...stylesCard.buttonStyle,\n                                flex: 1,\n                                float: 'right'\n                            }}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"primary\"\n                            onClick={this.loginScreen.bind(this)}\n                            style={{ ...stylesCard.buttonStyle, float: 'left' }}\n                        >\n                            Log In\n                        </Button>\n                    </div>\n                </Card>\n            );\n        }\n    }\n\n    emailChanged(email) {\n        this.setState({\n            email\n        });\n    }\n\n    passwordChanged(password) {\n        this.setState({ password });\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n\n        if (email === '' || email === undefined) {\n            this.setState({ error: 'Email is required' });\n            return;\n        }\n\n        if (password === '' || password === undefined) {\n            this.setState({ error: 'Password is required' });\n            return;\n        }\n\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(error => {\n                var errorMessage = error.message;\n                this.setState({ error: errorMessage });\n            });\n    }\n\n    signUp() {\n        const { email, password } = this.state;\n\n        if (email === '' || email === undefined) {\n            this.setState({ error: 'Email is required' });\n            return;\n        }\n\n        if (password === '' || password === undefined) {\n            this.setState({ error: 'Password is required' });\n            return;\n        }\n\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({ error: error.message });\n            });\n    }\n\n    signUpScreen() {\n        this.setState({ signUpScreen: true, error: '' });\n    }\n\n    loginScreen() {\n        this.setState({ signUpScreen: false, error: '' });\n    }\n}\n\nexport default withStyles(styles)(LoginPage);\n","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport firebase from './util/firebase';\nimport ChatPage from './pages/ChatPage';\nimport LoginPage from './pages/LoginPage';\nimport { socketConnect } from './util/websocket';\n\nclass App extends Component {\n    state = {\n        user: {}\n    };\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={props => (\n                            <ChatPage {...props} user={this.state.user} />\n                        )}\n                    />\n                    <Route\n                        path=\"/login\"\n                        render={props => (\n                            <LoginPage {...props} user={this.state.user} />\n                        )}\n                    />\n                </div>\n            </Router>\n        );\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({ user });\n                socketConnect();\n            } else {\n                // User is signed out.\n                // ...\n                this.setState({ user: {} });\n            }\n        });\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}